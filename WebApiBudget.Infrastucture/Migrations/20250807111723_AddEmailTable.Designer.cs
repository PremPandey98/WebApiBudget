// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiBudget.Infrastucture.Data;

#nullable disable

namespace WebApiBudget.Infrastucture.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250807111723_AddEmailTable")]
    partial class AddEmailTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GroupEntityUsersEntity", b =>
                {
                    b.Property<Guid>("GroupsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupsId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("GroupEntityUsersEntity");
                });

            modelBuilder.Entity("WebApiBudget.DomainOrCore.Entities.BlacklistedTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BlacklistedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("BlacklistedTokens");
                });

            modelBuilder.Entity("WebApiBudget.DomainOrCore.Entities.DepositEntity", b =>
                {
                    b.Property<int>("DepositId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepositId"));

                    b.Property<Guid?>("AddedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGroupRelated")
                        .HasColumnType("bit");

                    b.Property<string>("Tittle")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DepositId");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("GroupId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("WebApiBudget.DomainOrCore.Entities.ExpenseCategoryEntity", b =>
                {
                    b.Property<int>("ExpenseCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseCategoryID"));

                    b.Property<string>("ExpenseCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseCategoryID");

                    b.ToTable("ExpenseCategories");

                    b.HasData(
                        new
                        {
                            ExpenseCategoryID = 1,
                            ExpenseCategoryName = "Food"
                        },
                        new
                        {
                            ExpenseCategoryID = 2,
                            ExpenseCategoryName = "Hospital"
                        },
                        new
                        {
                            ExpenseCategoryID = 3,
                            ExpenseCategoryName = "Investment"
                        },
                        new
                        {
                            ExpenseCategoryID = 4,
                            ExpenseCategoryName = "Rent"
                        },
                        new
                        {
                            ExpenseCategoryID = 5,
                            ExpenseCategoryName = "Bill"
                        },
                        new
                        {
                            ExpenseCategoryID = 6,
                            ExpenseCategoryName = "Education"
                        },
                        new
                        {
                            ExpenseCategoryID = 7,
                            ExpenseCategoryName = "Transport"
                        },
                        new
                        {
                            ExpenseCategoryID = 8,
                            ExpenseCategoryName = "Entertainment"
                        },
                        new
                        {
                            ExpenseCategoryID = 9,
                            ExpenseCategoryName = "Utilities"
                        },
                        new
                        {
                            ExpenseCategoryID = 10,
                            ExpenseCategoryName = "Grocery"
                        },
                        new
                        {
                            ExpenseCategoryID = 11,
                            ExpenseCategoryName = "Travel"
                        },
                        new
                        {
                            ExpenseCategoryID = 12,
                            ExpenseCategoryName = "Insurance"
                        },
                        new
                        {
                            ExpenseCategoryID = 13,
                            ExpenseCategoryName = "Shopping"
                        },
                        new
                        {
                            ExpenseCategoryID = 14,
                            ExpenseCategoryName = "Loan"
                        },
                        new
                        {
                            ExpenseCategoryID = 15,
                            ExpenseCategoryName = "Miscellaneous"
                        },
                        new
                        {
                            ExpenseCategoryID = 16,
                            ExpenseCategoryName = "creditCardBill"
                        });
                });

            modelBuilder.Entity("WebApiBudget.DomainOrCore.Entities.ExpenseRecordsEntity", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseId"));

                    b.Property<Guid?>("AddedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ExpenseCategoryID")
                        .HasColumnType("int");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGroupRelated")
                        .HasColumnType("bit");

                    b.Property<string>("Tittle")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ExpenseId");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("ExpenseCategoryID");

                    b.HasIndex("GroupId");

                    b.ToTable("ExpenseRecords");
                });

            modelBuilder.Entity("WebApiBudget.DomainOrCore.Entities.GroupEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("WebApiBudget.DomainOrCore.Entities.OtpEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("OtpCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Otps");
                });

            modelBuilder.Entity("WebApiBudget.DomainOrCore.Entities.UsersEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailVerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmailVerificationTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GroupEntityUsersEntity", b =>
                {
                    b.HasOne("WebApiBudget.DomainOrCore.Entities.GroupEntity", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiBudget.DomainOrCore.Entities.UsersEntity", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiBudget.DomainOrCore.Entities.DepositEntity", b =>
                {
                    b.HasOne("WebApiBudget.DomainOrCore.Entities.UsersEntity", "AddedByUser")
                        .WithMany()
                        .HasForeignKey("AddedByUserId");

                    b.HasOne("WebApiBudget.DomainOrCore.Entities.GroupEntity", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("AddedByUser");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("WebApiBudget.DomainOrCore.Entities.ExpenseRecordsEntity", b =>
                {
                    b.HasOne("WebApiBudget.DomainOrCore.Entities.UsersEntity", "AddedByUser")
                        .WithMany()
                        .HasForeignKey("AddedByUserId");

                    b.HasOne("WebApiBudget.DomainOrCore.Entities.ExpenseCategoryEntity", "ExpenseCategory")
                        .WithMany()
                        .HasForeignKey("ExpenseCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiBudget.DomainOrCore.Entities.GroupEntity", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("AddedByUser");

                    b.Navigation("ExpenseCategory");

                    b.Navigation("Group");
                });
#pragma warning restore 612, 618
        }
    }
}
